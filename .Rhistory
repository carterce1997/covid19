group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(log_growth_factor = log(positiveIncrease / lag(positiveIncrease))) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, date, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
lm(log_growth_factor ~ 0 + state, data = .)
trace <-
sim(m)
trace@coef %>%
as.data.frame() %>%
pivot_longer(colnames(.)) %>%
mutate(name = str_remove(name, 'state')) %>%
group_by(name) %>%
summarize(
low = quantile(value, .05),
med = median(value),
high = quantile(value, .95)
) %>%
ungroup() %>%
mutate(name = fct_reorder(name, med)) %>%
ggplot(aes(x = name, ymin = low, y = med, ymax = high)) +
geom_pointrange() +
coord_flip()
trace@coef %>%
as.data.frame() %>%
pivot_longer(colnames(.)) %>%
mutate(name = str_remove(name, 'state')) %>%
group_by(name) %>%
summarize(
low = quantile(value, .05),
med = median(value),
high = quantile(value, .95)
) %>%
ungroup() %>%
mutate(name = fct_reorder(name, med)) %>%
ggplot(aes(x = name, ymin = low, y = med, ymax = high)) +
geom_pointrange() +
coord_flip() +
theme_minimal()
runApp('visualizations/app2')
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease)),
days_out = date - Sys.Date()
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, date, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
lmer(log_growth_factor ~ days_out | state, data = .)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease)),
days_out = date - Sys.Date()
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, days_out, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
lmer(log_growth_factor ~ days_out | state, data = .)
m <-
gf_data %>%
lmer(log_growth_factor ~ days_out : state, data = .)
m <-
gf_data %>%
lm(log_growth_factor ~ days_out : state, data = .)
trace <-
sim(m)
summary(m)
m <-
gf_data %>%
lm(log_growth_factor ~ state + days_out : state, data = .)
trace <-
sim(m)
summary(m)
m <-
gf_data %>%
lm(log_growth_factor ~ state * days_out, data = .)
summary(m)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ days_out | state, data = .)
library(rstanarm)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ days_out | state, data = .)
summary(m)
plot(m)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = .)
plot(m)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 7, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = .)
plot(m)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 14, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = ., chains = 1)
plot(m)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 7, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = ., chains = 1)
plot(m)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = positiveIncrease / lag(positiveIncrease)
) %>%
slice(max(n() - 7, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = ., chains = 1)
plot(m)
plot(m) +
theme_minimal()
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = positiveIncrease / lag(positiveIncrease)
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
m <-
gf_data %>%
stan_glmer(log_growth_factor ~ 0 + (1 | state), data = ., chains = 1)
plot(m) +
theme_minimal()
rstan:::rstudio_stanc("models/growth_factor_comparison/stan/hierarchical_normal_pooled_location_and_scale.stan")
rstan:::rstudio_stanc("models/growth_factor_comparison/stan/hierarchical_normal_pooled_location_and_scale.stan")
library(rstan)
model <-
stan_model('models/growth_factor_comparison/stan/hierarchical_normal_pooled_location_and_scale.stan')
covid_data <-
get_covid_data()
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = positiveIncrease / lag(positiveIncrease)
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
library(tidybayes)
gf_data %>%
rename(y = log_growth_factor)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 5, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
gf_data %>%
rename(y = log_growth_factor)
stan_data <-
gf_data %>%
rename(y = log_growth_factor) %>%
compose_data()
fit <- sampling(model, data = stan_data, chains = 1)
source('C:/Users/carte/Desktop/covid19/models/growth_factor_comparison/gf_comparison2.R', echo=TRUE)
fit <-
sampling(model, data = stan_data, chains = 1)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 14, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
stan_data <-
gf_data %>%
rename(y = log_growth_factor) %>%
compose_data()
fit <-
sampling(model, data = stan_data, chains = 1)
gf_data <-
covid_data %>%
arrange(date) %>%
group_by(state) %>%
filter(positiveIncrease > 0) %>%
mutate(
log_growth_factor = log(positiveIncrease / lag(positiveIncrease))
) %>%
slice(max(n() - 7, 1):n()) %>%
ungroup() %>%
dplyr::select(state, log_growth_factor) %>%
drop_na(log_growth_factor)
stan_data <-
gf_data %>%
rename(y = log_growth_factor) %>%
compose_data()
fit <-
sampling(model, data = stan_data, chains = 1)
source('C:/Users/carte/Desktop/covid19/models/growth_factor_comparison/gf_comparison2.R', echo=TRUE)
trace <-
gather_draws(fit, mu[state], sigma[state])
trace
trace <-
recover_types(gf_data) %>%
gather_draws(fit, mu[state], sigma[state])
trace
trace <-
gather_draws(fit, mu[state], sigma[state]) %>%
recover_types(gf_data)
trace
shiny::runApp('visualizations/app2')
source('C:/Users/carte/Desktop/covid19/models/richards_cumulative_cases_model/negbin_richards_cumulative_cases_model.R', echo=TRUE)
covid_data <-
get_covid_data()
ny_covid_data <-
covid_data %>%
filter(
Region == region,
!(Date == max(Date) & n == 0)
) %>%
arrange(Date) %>%
mutate(
DaysOut = as.numeric(difftime(Date, Sys.Date(), units = 'days')),
cumu_n = cumsum(n)
) %>%
filter(
DaysOut >= -28
)
stan_data <-
list(
n = nrow(ny_covid_data),
t = ny_covid_data$DaysOut,
cumu_y = ny_covid_data$cumu_n
)
fit <-
sampling(cumulative_model, data = stan_data, chains = 1, iter = 10000)
trace <-
spread_draws(fit, A, m, s, nu, phi)
predictions <-
merge(
trace,
data.frame(expand.grid(t = seq(-14, 14)))
) %>%
mutate(
cumu_y_pred = rnbinom(n(), mu = A  / (1 + exp(-(t - m) / s)) ^ (1 / nu), size = phi)
)
predictions_quantile <-
predictions %>%
group_by(t) %>%
summarize(
LowPred2 = max(quantile(cumu_y_pred, .01), 0),
LowPred1 = max(quantile(cumu_y_pred, .1), 0),
MedianPred = max(median(cumu_y_pred), 0),
HighPred1 = max(quantile(cumu_y_pred, .9), 0),
HighPred2 = max(quantile(cumu_y_pred, .99), 0)
) %>%
ungroup()
curves <-
ggplot() +
geom_ribbon(aes(x = t, ymin = LowPred2, ymax = HighPred2), color = 'gray', data = predictions_quantile, alpha = .25) +
geom_ribbon(aes(x = t, ymin = LowPred1, ymax = HighPred1), color = 'gray', data = predictions_quantile, alpha = .25) +
geom_line(aes(x = t, y = MedianPred), color = 'red', data = predictions_quantile) +
geom_line(aes(x = DaysOut, y = cumu_n), data = ny_covid_data, stat = 'identity', color = 'black', size = 1) +
xlim(-21, 14) +
ggtitle('Cumulative Cases Prediction')
median_point <-
trace %>%
ggplot() +
geom_histogram(aes(x = m + s * log(.5 ^ nu / (1 - .5 ^ nu))), bins = 100) +
xlim(-21, 14)
curves / median_point
derivative_predictions <-
merge(
trace %>%
sample_n(50),
data.frame(expand.grid(t = seq(-14, 14)))
) %>%
mutate(
mu_pred = A / (nu * s)  * exp(-(t - m) / s) / (1 + exp(-(t - m) / s)) ^ (1 + 1 / nu)
)
derivative_curves <-
derivative_predictions %>%
ggplot() +
geom_line(aes(x = t, y = mu_pred, group = .draw)) +
geom_bar(aes(x = DaysOut, y = n), data = ny_covid_data, stat = 'identity')
derivative_curves <-
derivative_predictions %>%
ggplot() +
geom_line(aes(x = t, y = mu_pred, group = .draw)) +
geom_bar(aes(x = DaysOut, y = n), data = ny_covid_data, stat = 'identity')
derivative_curves
derivative_curves <-
derivative_predictions %>%
ggplot() +
geom_line(aes(x = t, y = mu_pred, group = .draw)) +
geom_bar(aes(x = DaysOut, y = n), data = ny_covid_data, stat = 'identity') +
scale_y_log10()
derivative_curves
curves / median_point
get_covid_data <- function() {
results <-
vroom::vroom('http://covidtracking.com/api/states/daily.csv') %>%
mutate(date = ymd(date)) %>%
replace(is.na(.), 0)
totals <-
results %>%
group_by(date) %>%
summarize_all(function(x) if( 'numeric' %in% class(x)) sum(x) else NA) %>%
ungroup() %>%
mutate(state = 'USA')
return(rbind(results, totals))
}
covid_data <-
get_covid_data()
ny_covid_data <-
covid_data %>%
filter(state == region) %>%
arrange(date) %>%
mutate(DaysOut = as.numeric(difftime(date, Sys.Date(), units = 'days'))) %>%
filter(DaysOut >= -28)
stan_data <-
list(
n = nrow(ny_covid_data),
t = ny_covid_data$DaysOut,
cumu_y = ny_covid_data$positive
)
fit <-
sampling(cumulative_model, data = stan_data, chains = 1, iter = 10000)
trace <-
spread_draws(fit, A, m, s, nu, phi)
predictions <-
merge(
trace,
data.frame(expand.grid(t = seq(-14, 14)))
) %>%
mutate(
cumu_y_pred = rnbinom(n(), mu = A  / (1 + exp(-(t - m) / s)) ^ (1 / nu), size = phi)
)
predictions_quantile <-
predictions %>%
group_by(t) %>%
summarize(
LowPred2 = max(quantile(cumu_y_pred, .01), 0),
LowPred1 = max(quantile(cumu_y_pred, .1), 0),
MedianPred = max(median(cumu_y_pred), 0),
HighPred1 = max(quantile(cumu_y_pred, .9), 0),
HighPred2 = max(quantile(cumu_y_pred, .99), 0)
) %>%
ungroup()
predictions_quantile <-
predictions %>%
group_by(t) %>%
summarize(
LowPred2 = max(quantile(cumu_y_pred, .01), 0),
LowPred1 = max(quantile(cumu_y_pred, .1), 0),
MedianPred = max(median(cumu_y_pred), 0),
HighPred1 = max(quantile(cumu_y_pred, .9), 0),
HighPred2 = max(quantile(cumu_y_pred, .99), 0)
) %>%
ungroup()
curves <-
ggplot() +
geom_ribbon(aes(x = t, ymin = LowPred2, ymax = HighPred2), color = 'gray', data = predictions_quantile, alpha = .25) +
geom_ribbon(aes(x = t, ymin = LowPred1, ymax = HighPred1), color = 'gray', data = predictions_quantile, alpha = .25) +
geom_line(aes(x = t, y = MedianPred), color = 'red', data = predictions_quantile) +
geom_line(aes(x = DaysOut, y = positive), data = ny_covid_data, stat = 'identity', color = 'black', size = 1) +
xlim(-21, 14) +
ggtitle('Cumulative Cases Prediction')
median_point <-
trace %>%
ggplot() +
geom_histogram(aes(x = m + s * log(.5 ^ nu / (1 - .5 ^ nu))), bins = 100) +
xlim(-21, 14)
curves / median_point
ny_covid_data <-
covid_data %>%
filter(state == region) %>%
arrange(date) %>%
mutate(DaysOut = as.numeric(difftime(date, Sys.Date(), units = 'days'))) %>%
filter(DaysOut >= -28)
source('C:/Users/carte/Desktop/covid19/models/richards_cumulative_cases_model/negbin_richards_cumulative_cases_model.R', echo=TRUE)
ny_covid_data
trace$nu
median(trace$A)
median(trace$m)
median(trace$s)
median(trace$nu)
source('C:/Users/carte/Desktop/covid19/models/logistic_cumulative_cases_model/cumulative_cases_model.R', echo=TRUE)
source('C:/Users/carte/Desktop/covid19/models/logistic_cumulative_cases_model/cumulative_cases_model.R', echo=TRUE)
curves <-
ggplot() +
geom_line(aes(x = t, y = mu_pred, group = .draw), data = predictions, alpha = .01) +
geom_line(aes(x = DaysOut, y = positive), data = ny_covid_data, stat = 'identity', color = 'red', size = 1) +
xlim(-14, 14) +
ylim(0, max(trace$A)) +
ggtitle('Cumulative Cases Prediction')
p <- .5
inflection_estimate <-
trace %>%
ggplot() +
geom_histogram(aes(x = m + s * log(p / (1 - p))), bins = 100) +
geom_vline(aes(xintercept = median(m + s * log(p / (1 - p))))) +
xlim(-14, 14) +
ggtitle('Inflection Point Estimate')
total_cases_estimate <-
trace %>%
ggplot() +
geom_histogram(aes(x = A), bins = 50) +
geom_vline(aes(xintercept = median(A))) +
xlim(0, max(trace$A)) +
coord_flip() +
ggtitle('Total Cases Estimate')
curves +
total_cases_estimate +
inflection_estimate +
plot_spacer() +
plot_layout(ncol = 2, widths = c(3, 1, 3, 1))
source('C:/Users/carte/Desktop/covid19/models/logistic_cumulative_cases_model/cumulative_cases_model.R', echo=TRUE)
curves +
total_cases_estimate +
inflection_estimate +
plot_spacer() +
plot_layout(ncol = 2, widths = c(3, 1, 3, 1))
source('C:/Users/carte/Desktop/covid19/models/logistic_cumulative_cases_model/cumulative_cases_model.R', echo=TRUE)
curves
source('C:/Users/carte/Desktop/covid19/models/logistic_cumulative_cases_model/cumulative_cases_model.R', echo=TRUE)
runApp('visualizations/app2')
